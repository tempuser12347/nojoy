from sqlalchemy import Column, Integer, String, JSON, ForeignKey
from app.database import Base

class Discovery(Base):
    __tablename__ = "discovery"
    
    id = Column(Integer, primary_key=True, index=True)
    type = Column(String)
    name = Column(String)
    additional_name = Column(String)
    name_key = Column(String)
    description = Column(String)
    category = Column(String)
    difficulty = Column(Integer)
    card_points = Column(Integer)
    discovery_experience = Column(Integer)
    card_acquisition_experience = Column(Integer)
    report_reputation = Column(Integer)
    discovery_method = Column(String)
    discovery_location = Column(JSON)
    discovery_rank = Column(String)
    additional_description = Column(String)
    era = Column(String)
    time_period = Column(String)
    weather = Column(String)
    coordinates = Column(String)

class Consumable(Base):
    __tablename__ = "consumable"
    
    id = Column(Integer, primary_key=True, index=True)
    type = Column(String)
    name = Column(String)
    additional_Name = Column(String)
    description = Column(String)
    category = Column(String)
    usage_Effect = Column(String)
    features = Column(String)
    Item = Column(String)
    Duplicate = Column(String)

class Ship(Base):
    __tablename__ = "ship"
    
    id = Column(Integer, primary_key=True, index=True)
    name = Column(String)
    additional_name = Column(String)
    description = Column(String)
    type = Column(String)
    size = Column(String)
    category = Column(String)
    lv_adventure = Column(Integer)
    lv_trade = Column(Integer)
    lv_battle = Column(Integer)
    default_material = Column(String)
    base_reinforcement = Column(Integer)
    re_reinforcement = Column(Integer)
    shipbuilding = Column(Integer)
    dry_days = Column(Integer)
    city_progress = Column(String)
    city_invest = Column(String)
    durability = Column(Integer)
    vertical_sail = Column(Integer)
    horizontal_sail = Column(Integer)
    rowing_power = Column(Integer)
    turning_performance = Column(Integer)
    wave_resistance = Column(Integer)
    armor = Column(Integer)
    cabin_capacity = Column(Integer)
    required_crew = Column(Integer)
    cannon_chambers = Column(Integer)
    warehouse_capacity = Column(Integer)
    durability_plus = Column(Integer)
    vertical_sail_plus = Column(Integer)
    horizontal_sail_plus = Column(Integer)
    rowing_power_plus = Column(Integer)
    turning_performance_plus = Column(Integer)
    wave_resistance_plus = Column(Integer)
    armor_plus = Column(Integer)
    cabin_capacity_plus = Column(Integer)
    cannon_chambers_plus = Column(Integer)
    warehouse_capacity_plus = Column(Integer)
    auxiliary_sails = Column(Integer)
    figurehead = Column(Integer)
    crest = Column(Integer)
    special_equipment = Column(Integer)
    additional_armor = Column(Integer)
    broadside_ports = Column(Integer)
    bow_ports = Column(Integer)
    stern_ports = Column(Integer)

class Technic(Base):
    __tablename__ = "technic"
    
    id = Column(Integer, primary_key=True, index=True)
    name = Column(String)
    description = Column(String)
    weapon = Column(String)
    type = Column(String)
    rank = Column(Integer)
    effect = Column(String)
    consumption = Column(Integer)
    dictionary = Column(Integer)
    range = Column(Integer)
    skill = Column(String)
    technique_rank = Column(String)
    preceding = Column(String)

class LandNPC(Base):
    __tablename__ = "landnpc"
    
    id = Column(Integer, primary_key=True, index=True)
    name = Column(String)
    lv = Column(Integer)
    feature = Column(String)
    additionalname = Column(String)
    description = Column(String)
    fieldname = Column(String)
    technique = Column(String)
    item_id = Column(String)
    field_id = Column(JSON)
    technic_id = Column(JSON)
    비고 = Column(String)

class Quest(Base):
    __tablename__ = "quest"
    
    id = Column(Integer, primary_key=True, index=True)
    type = Column(String)
    name = Column(String)
    additional_name = Column(String)
    description = Column(String)
    series = Column(String)
    difficulty = Column(Integer)
    era = Column(String) # VARCHAR(255)
    category = Column(String)
    location = Column(String)
    destination = Column(String)
    destination_coordinates = Column(String)
    discovery = Column(String)
    preceding_discovery_quest = Column(String)
    deadline = Column(String) # DATE in schema, but keeping as String for now to avoid migration issues if data is not clean date format. Can be changed to Date.
    required_items = Column(String)
    guide = Column(String) # TEXT
    progress = Column(String)
    previous_continuous_quest_id = Column(String) # TEXT
    episode = Column(Integer)
    one_time_only = Column(Integer)
    rare = Column(Integer)
    association_required = Column(Integer)
    skills = Column(String)
    additional_skills = Column(String)
    association_skills = Column(String)
    sophia_rank = Column(Integer)
    sophia_points = Column(Integer)
    nationality = Column(String)
    occupation = Column(String)
    port_permission = Column(String)
    reputation = Column(String)
    other = Column(String) # TEXT
    reward_money = Column(Integer)
    advance_payment = Column(Integer)
    report_experience = Column(String)
    report_reputation = Column(String)
    reward_items = Column(String)
    reward_immigrants = Column(String)
    reward_techniques = Column(String)
    reward_title = Column(String)

class City(Base):
    __tablename__ = "city"
    
    id = Column(Integer, primary_key=True, index=True)
    name = Column(String)
    region = Column(String)
    sea_area = Column(String)
    culture = Column(String)
    language = Column(String)
    description = Column(String)
    map_image_point_x = Column(String)
    map_image_point_y = Column(String)
    city_coord_x = Column(String)
    city_coord_y = Column(String)
    category = Column(String)
    port_enter_permission = Column(String)
    entry_point = Column(String)
    facility = Column(String)
    flag_quest_id = Column(String)
    investment_amount = Column(String)
    investment_reward = Column(String)
    transaction_amount = Column(String)
    transaction_reward = Column(String)
    fishing = Column(String)

class Shipwreck(Base):
    __tablename__ = "shipwreck"
    
    id = Column(Integer, primary_key=True, index=True)
    type = Column(String)
    name = Column(String)
    explanation = Column(String)
    difficulty = Column(Integer)
    sea_area = Column(String)
    destination = Column(String)
    discovery_coordinates = Column(String)
    skill = Column(String)
    characteristics = Column(String)
    discovery = Column(String)
    consumables = Column(String)
    trade_goods = Column(String)
    equipment = Column(String)
    recipebook = Column(String)
    aux_sail = Column(String)
    ship_material = Column(String)
    cannon = Column(String)
    special_equipment = Column(String)
    additional_armor = Column(String)
    figurehead = Column(String)
    emblem = Column(String)
    ship_decoration = Column(String)
    consumable_code = Column(String)
    trade_goods_code = Column(String)
    equipment_code = Column(String)
    recipe_book_code = Column(String)
    aux_sail_code = Column(String)
    ship_material_code = Column(String)
    cannon_code = Column(String)
    special_equipment_code = Column(String)
    additional_armor_code = Column(String)
    figurehead_code = Column(String)
    emblem_code = Column(String)
    ship_decoration_code = Column(String)
    item_id = Column(String)

class Recipe(Base):
    __tablename__ = "recipe"
    
    id = Column(Integer, primary_key=True, index=True)
    name = Column(String)
    description = Column(String)
    recipe_book_id = Column(Integer)
    required_Skill = Column(String)
    ingredients = Column(String)
    sophia = Column(Integer)
    era = Column(String)
    home_production = Column(String)
    development = Column(String)
    Investment_cost = Column(Integer)
    central_city = Column(String)
    Industrial_revolution = Column(String)
    own_Industrial_city = Column(String)
    title = Column(String)
    consumption_contribution = Column(Integer)
    other = Column(String)
    success = Column(String)
    greatsuccess = Column(String)
    failure = Column(String)



class TreasureMap(Base):
    __tablename__ = "treasuremap"

    id = Column(Integer, primary_key=True, index=True)
    name = Column(String)
    description = Column(String)
    required_skill = Column(String)
    category = Column(String)
    academic_field = Column(String)
    library = Column(String)
    destination = Column(String)
    discovery = Column(Integer)
    city_conditions = Column(String)
    preceding = Column(String)
    reward_dukat = Column(Integer)
    reward_item = Column(String)
    strategy = Column(String)
